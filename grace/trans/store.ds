module trans/store

imports
  trans/values

signature
  sort aliases
    OHeap = Map(Int, O)
    MHeap = Map(Int, M)

  variables
    OH : OHeap
    MH : MHeap

  constructors
    
    getOHeap: OHeap -> V
    getMHeap: MHeap -> V
    
    Stored: O -> V
    
    readObject: Int --> O
    allocateObject: O --> Int
    writeObject: Int * O --> O
    
    readMethod: Int --> M
    allocateMethod: M --> Int
    writeMethod: Int * M --> M

rules
  
  readObject(addr) :: OH --> OH[addr].
  
  allocateObject(o) --> addr
  where
    fresh => addr;
    writeObject(addr, o) --> _.

  writeObject(addr, o) :: OH --> o :: OHeap {addr |--> o, OH}.
  
  readMethod(addr) :: MH --> MH[addr].
  
  allocateMethod(m) --> addr
  where
    fresh => addr;
    writeMethod(addr, m) --> _.

  writeMethod(addr, m) :: MH --> m :: MHeap {addr |--> m, MH}.
