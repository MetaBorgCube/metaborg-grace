module trans/grace

imports
  trans/semantics/semantics

signature
  arrows
    Program -init-> (V * H * Exn)

rules

  p@Program(_, _) -init-> (v_out, H, EX)
    where
      next() --> base;
      O base, S base, M [] : List(String), P Exec() |- p :: H {}, L {}, VH {}, D {}, I {}, EX Ok() --> v :: H, L, VH, EX;
      case EX of {
        Ok() =>
          v => v_out
        otherwise =>
          StringV("No result") => v_out
      }.
