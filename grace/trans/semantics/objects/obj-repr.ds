module trans/semantics/objects/obj-repr

imports
  trans/semantics/store
  trans/semantics/values
  trans/semantics/functions/functions
  trans/semantics/lib/lib
  
signature
  sort aliases
    Self = Loc
    Outer = Loc
    
  components
    S : Self
    O : Outer
  
  constructors
    RefV: Loc -> V {implicit}
  
  sorts
    Object
  
  sort aliases
    StoreData = Object
    Attributes = Map(String, V)
    Aliases = Map(String, String)
    Excludes = Map(String, String)
    Parent = (Loc * Aliases * Excludes)
    Parents = List(Parent)
  
  constructors
    Obj: Outer * Parents * Attributes -> Object
  
  arrows
    obj-constr-name() --> String
    
    self-addr() --> Loc
    outer-addr() --> Loc
    outer-addr(Loc) --> Loc
    bogus-addr() --> Loc
    
rules
  
  is-native(RefV(_)) --> false
  
  obj-constr-name() --> "#ctr"

  S |- self-addr() --> S

  O |- outer-addr() --> O
  
  outer-addr(S) --> O
  where
    read(S) --> Obj(O, _, _)
  
  bogus-addr() --> -99
  
  
   
  
  