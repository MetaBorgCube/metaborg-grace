module semantics/runtime/nabl2-runtime/frame-api

imports
  semantics/runtime/nabl2-runtime/scopegraph-api

signature // The API is parameterized by a `Val` sort

  sorts Val

signature

  sorts Heap

  sorts Frame

  sorts Addr
  
  components
    F : Frame
    H : Heap
  
  arrows
    F, H |- lookup(Path) --> Addr
    H |- get(Addr) --> Val
    F |- set(Addr, Val) :: H --> Val :: H

  arrows
    H |- scopeOf(Frame) --> Scope
    H |- linksOf(Frame) --> Map(Label, Map(Scope, Frame))
    H |- slotsOf(Frame) --> Map(Occurrence, Val)

signature // The API is parameterized by a `default` operation that returns a default value for each type (where `Type` is a parameter of the scope graph API)

  arrows
    default(Type) --> Val

signature

  arrows
    initHeap(AST) --> Heap
    initFrame(Scope, Map(Label, Map(Scope, Frame)), Map(Occurrence, Val)) :: H --> Frame :: H
    initDefaultNS(Scope, Map(Label, Map(Scope, Frame)), List(Namespace)) :: H --> Frame :: H
    initDefault(Scope, Map(Label, Map(Scope, Frame))) :: H --> Frame :: H
    initEager(Scope, List(Namespace)) :: H --> Frame :: H
    mkAddr(Frame, Occurrence) --> Addr
