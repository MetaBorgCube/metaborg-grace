module trans/semantics/functions/visibility

imports
  trans/semantics/objects/obj-repr
  trans/semantics/store
  
signature
  sorts
    VisAnno
  
  constructors
    ClosVis: Closure * VisAnno -> V
    Pub: VisAnno
    Priv: VisAnno
  
  arrows
    resolve-lookup(Identifier, Loc) --> (Loc * Closure)
    
    ensure-visible(Identifier, Loc, ResPath, Loc, VisAnno) --> U

    
rules
  
  S |- resolve-lookup(x, S-recv) --> (S-owner, clos)
  where
    resolve-top(x, S-recv) --> path;
    lookup(path, S-recv) --> (S-owner, ClosVis(clos, vis));
    ensure-visible(x, S, path, S-owner, vis) --> _
  
  ensure-visible(_, S-call, _, S-owner, _) --> U()
  where
    S-call == S-owner
  
  ensure-visible(_, S-call, [PO() | _], S-owner, Priv()) --> U()
  where
    S-call != S-owner
  
  ensure-visible(x, S-call, path, S-owner, Pub()) --> U()
  where
    S-call != S-owner;
    path-aliased(x, path) --> is-aliased;
    case is-aliased of {
      true =>
        name(x) --> name;
        halt-error("Requested confidential method '" ++ name ++ "' from outside") --> _
      otherwise =>
    }
  
  ensure-visible(x, S-call, [p | _], S-owner, Priv()) --> U()
  where
    S-call != S-owner;
    p =!=> PO();
    name(x) --> name;
    halt-error("Requested confidential method '" ++ name ++ "' from outside") --> _

  

signature
  arrows
    slot-annos-to-vis-getter(List(Annotation)) --> VisAnno
    slot-anno-to-vis-getter(Annotation) --> VisAnno
    slot-annos-to-vis-setter(List(Annotation)) --> VisAnno
    slot-anno-to-vis-setter(Annotation) --> VisAnno
    
    method-annos-to-vis(List(Annotation)) --> VisAnno
    method-anno-to-vis(Annotation) --> VisAnno
    
    vis-to-method-annos(VisAnno) --> List(Annotation)
    
    vis-reconcile(VisAnno, VisAnno) --> VisAnno
    
rules
  
  slot-annos-to-vis-getter([]) --> Priv()
  
  slot-annos-to-vis-getter([anno | annos]) --> vis-reconcile(curr-anno, prev-anno)
  where
    slot-annos-to-vis-getter(annos) --> prev-anno;
    slot-anno-to-vis-getter(anno) --> curr-anno
  
  slot-anno-to-vis-getter(a) --> vis
  where
    case a of {
      Readable() =>
        Pub() => vis
      Public() =>
        Pub() => vis
      otherwise =>
        Priv() => vis
    }
  
  slot-annos-to-vis-setter([]) --> Priv()
  
  slot-annos-to-vis-setter([anno | annos]) --> vis-reconcile(curr-anno, prev-anno)
  where
    slot-annos-to-vis-setter(annos) --> prev-anno;
    slot-anno-to-vis-setter(anno) --> curr-anno
  
  slot-anno-to-vis-setter(a) --> vis
  where
    case a of {
      Writable() =>
        Pub() => vis
      Public() =>
        Pub() => vis
      otherwise =>
        Priv() => vis
    }
  
  method-annos-to-vis([]) --> Priv()
  
  method-annos-to-vis([anno | annos]) --> vis-reconcile(curr-anno, prev-anno)
  where
    method-annos-to-vis(annos) --> prev-anno;
    method-anno-to-vis(anno) --> curr-anno
  
  method-anno-to-vis(Confidential()) --> Priv()
  
  method-anno-to-vis(Public()) --> Pub()
  
  vis-to-method-annos(Pub()) --> [Public()]
  vis-to-method-annos(Priv()) --> [Confidential()]
  
  vis-reconcile(Pub(), _) --> Pub()
  vis-reconcile(_, Pub()) --> Pub()
  vis-reconcile(Priv(), Priv()) --> Priv()
  

