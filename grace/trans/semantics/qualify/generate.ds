module trans/semantics/qualify/generate

imports
  src-gen/ds-signatures/grace-lowered-sig
  src-gen/ds-signatures/grace-sig

imports
  trans/semantics/runtime/natives
  trans/semantics/qualify/qualify
  
signature

  sorts
    Meta

  arrows
    make-qualified-call(Exp, Level, Level) --> Meta

rules

  make-qualified-call(MCallL(id@ID(n), es), lvl, targetLvl) --> MCallRecvL(Self(), id, es) : Meta
    where
      lvl == targetLvl;
      log("making self qcall for: " ++ n) --> _.
  
  make-qualified-call(MCallL(id@ID(n), es), lvl, targetLvl) --> MCallRecvL(Outer(), id, es) : Meta
    where
      addI(lvl, -1) == targetLvl;
      log("making outer qcall for: " ++ n) --> _.
      
  make-qualified-call(MCallL(id@ID(n), es), lvl, targetLvl) -->
      make-qualified-call(MCallRecvL(Outer(), id, es), addI(lvl, -1), targetLvl)
    where
      lvl != targetLvl;
      addI(lvl, -1) != targetLvl;
      log("deepening call for implicit: " ++ n) --> _.
      
  make-qualified-call(MCallRecvL(recv, id, es), lvl, targetLvl) -->
      MCallRecvL(MQCallOuter(recv), id, es) : Meta
    where
      addI(lvl, -1) == targetLvl; // one level away,means add outer call
      log("final extending outer call one more") --> _.
      
  make-qualified-call(MCallRecvL(recv, id, es), lvl, targetLvl) --> 
      make-qualified-call(MCallRecvL(MQCallOuter(recv), id, es), addI(lvl, -1), targetLvl)
    where
      addI(lvl, -1) != targetLvl; // more than one level away
      log("extending outer call one more") --> _.
      