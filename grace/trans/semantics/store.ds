module trans/semantics/store

imports
  trans/semantics/values

signature
  
  constructors
    WrappedL: Locals -> V
    WrappedOHeap: OHeap -> V
    WrappedMHeap: MHeap -> V
    
  arrows

    readObject(Ref) --> O
    allocateObject(O) --> Ref
    writeObject(Ref, O) --> O
    
    readMethod(Ref) --> M
    allocateMethod(M) --> Ref
    writeMethod(Ref, M) --> M
    
//    writeTrait(String, List(Statement)) --> List(Statement)
//    readTrait(String) --> List(Statement)
    
    writeLocal(String , V) --> V
    readLocal(String) --> V

rules

  readObject(addr) :: OH1 --> OH1[addr].
  
  allocateObject(o) --> addr
  where
    fresh => addr;
    writeObject(addr, o) --> _.

  writeObject(addr, o) :: OH1 --> o :: OH {addr |--> o, OH1}.
  
  readMethod(addr) :: MH --> MH[addr].
  
  allocateMethod(m) --> addr
  where
    fresh => addr;
    writeMethod(addr, m) --> _.

  writeMethod(addr, m) :: MH1 --> m :: MH {addr |--> m, MH1}.
  
  writeLocal(name, v) :: L1 --> v :: L {name |--> v, L1}.
  
  readLocal(name) :: L --> L[name].
  
//  writeTrait(name, sts) :: TH1 --> sts :: TH {name |--> sts, TH1}.

//  readTrait(name) :: TH --> TH[name].