module trans/semantics/store

signature
  sorts
    HeapData
    
  sort aliases
    Addr = Int
    H = Map(Addr, HeapData)
  
  components
    H : H

  arrows
    allocate(HeapData) :: H --> Addr :: H
    update(Addr, HeapData) :: H --> Addr :: H
    read(Addr) :: H --> HeapData :: H
    next() --> Addr
        
rules
  
  allocate(data) :: H --> addr :: H {addr |--> data, H}
  where
    next() --> addr.
  
  read(addr) :: H --> H[addr] :: H.

  update(addr, data) :: H --> addr :: H {addr |--> data, H}.
  
  next() --> fresh.
  