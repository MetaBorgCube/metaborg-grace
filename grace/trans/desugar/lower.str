module trans/desugar/lower

imports

    libstratego-lib
    libstratego-gpp
    libstratego-aterm
    src-gen/signatures/grace-sig
    src-gen/signatures/grace-lowered-sig
    src-gen/signatures/General-sig
    
    trans/desugar/desugar-common
    
    trans/desugar/lower-booleans

rules

  lower-all = lower
  lower = 
          lower-boolean-to-object <+
          lower-mdecl <+
          lower-methodcallwdot <+
          lower-mcallopex <+
          lower-mcallimpl <+
          lower-mcallcanonical <+
          lower-fail
  
  lower-methodcallwdot:
    MCallWDot(recv, [Part(idf, args)]) ->
      MCallCanonicalL(recv, <name-to-string> idf, as)
        with
          as := <flatten-list> <lower-arguments> args

  lower-mcallopex:
    MCallOpEx(recv, name, arg) ->
      MCallCanonicalL(recv, <name-to-string> name, [arg])
  
  lower-mcallimpl: 
    MCallImpl([Part(ID(name),args)]) -> MCallImplL(name, as)
      with
        as := <flatten-list> <lower-arguments> args
  
  lower-mdecl:
    MethodDecl(prfx, [MethodID(mName, ps)], annotations, MethodBody(cs)) ->
      MethodDeclL(name,annotations, paramNames, cs)
      with
        (paramNames, paramTypes) := <lower-params> ps;
        name := <name-to-string> mName 

  lower-mdecl:
    MethodDecl(prfx, [MethodOp(mName, ps)], annotations, MethodBody(cs)) ->
      MethodDeclL(name,annotations, paramNames, cs)
      with
        paramNames:= <lower-params> ps;
        name := <name-to-string> mName 
  
  lower-mcallcanonical: 
    MCallCanonical(_, recv, ID(name), args) ->
      MCallCanonicalL(recv, name, <lower-arguments> args)
  
  lower-params: NoParams() -> []
  lower-params: Params(ps) -> <lower-params> ps
  lower-params: [Param(n)] -> [n]
  lower-params: [Param(n) | bs] -> [n | ns ]
    where
      (ns, tas) := <lower-params> bs
  
  lower-arguments: ArgNumber(a) -> [Number(a)]
  lower-arguments: ArgString(a) -> [String(a)]
  lower-arguments: ArgBoolean(a) -> [Boolean(a)]
  lower-arguments: NoArgs() -> []
  lower-arguments: ArgsParen(as) -> <lower-arguments> as
  lower-arguments: [ArgsParen(a) | b] -> [a | <lower-arguments> b]
  lower-arguments: a -> a
  
  lower-fail: a -> <fail>