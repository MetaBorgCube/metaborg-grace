module syntax-types-expressions

language grace

start symbol Program

test type expr empty [[
var a: type { };
]] 0 warnings 0 errors

test type expr single name [[
var a: type { f; };
]] 0 warnings 0 errors

test type expr two names [[
var a: type { f; g; };
]] 0 warnings 0 errors

test type expr method with argument [[
var a: type { f (a); };
]] 0 warnings 0 errors

test type decl method with argument wildcard [[
var a: type { f (_); };
]] 0 warnings 0 errors

test type decl mixfix method [[
var a: type { f (a) g (b); };
]] 0 warnings 0 errors

test type expr return type [[
var a: type { f -> type {}; };
]] 0 warnings 0 errors

test type expr argument and return type [[
var a: type { f (a) -> type {}; };
]] 0 warnings 0 errors

test type expr argument type and return type [[
var a: type { f (a : type {}) -> type {}; };
]] 0 warnings 0 errors

test type decl mixfix arguments and return type[[
var a: type {
  f (a : type {}) g (b : type {}) -> type {};
};
]] 0 warnings 0 errors

test type expressions [[
var a: type {} | type {};
var b: type {} & type {};
var c: type {} - type {};
var d: type {} + type {};
]] 0 warnings 0 errors

