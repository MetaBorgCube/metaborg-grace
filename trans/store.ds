module trans/store

imports
  trans/values

signature
  sort aliases
    Heap = Map(Int, V)
    OHeap = Map(Int, O)

  variables
    H : Heap
    OH : OHeap

  constructors
    read: Int --> V
    readO: Int --> O
    allocate: V --> Int
    allocateO: O --> Int
    write: Int * V --> V
    writeO: Int * O --> O
    getHeap: Heap -> V
    getOHeap: OHeap -> V

rules

  read(addr) :: H --> H[addr].
  readO(addr) :: OH --> OH[addr].

  allocate(v) --> addr
  where
    fresh => addr;
    write(addr, v) --> _.
  
  allocateO(o) --> addr
  where
    fresh => addr;
    writeO(addr, o) --> _.

  write(addr, v) :: H --> v :: Heap {addr |--> v, H}.
  writeO(addr, o) :: OH --> o :: OHeap {addr |--> o, OH}
    where 
      print(StringV("attempting to write")) => _;
      print(NumV(addr)) => _.