module trans/environment

imports
  trans/values

signature
  sort aliases
    Env = Map(String, Int)

  variables
    E : Env

  constructors
    bindName: String * Int --> Env
    readName: String --> Int
    Binding: Env -> V
    
rules

  bindName(x, i) :: E --> {x |--> i, E}.
//    where print(StringV("bind to r/w")) => _.
  
  Env E |- bindName(x, i) --> {x |--> i, E}.
//    where print(StringV("vind to r/o")) => _.

  readName(x) :: E --> E[x]
    where 
      print(StringV("read")) => _;
      print(Binding(E)) => _;
      print(StringV(x)) => _;
      print(NumV(E[x])) => _.
//      print(Binding(eRW)) => _';
//      {eRO, eRW} => e.
//      print(Binding(e)) => _'.
//  
//  Env E |- readName(x) --> E[x]
//    where print(StringV("read from r/w")) => _.